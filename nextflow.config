manifest {
    name 'mrds_flow'
    author 'Erick Hernandez Gutierrez <erick.hernandez.gutierrez@usherbrooke.ca>'
    description 'Pipeline for MRDS'
    version '1.0.0'
    repository 'https://github.com/ErickHernandezGutierrez/mrds_flow.git'
}

process {
    publishDir = {"./results_mrds/$sid/$task.process"}
    scratch = true
    stageInMode = 'copy'
    stageOutMode = 'rsync'
    tag = { "$sid" }
    afterScript = 'sleep 1'
}

singularity {
    enabled = true
}

params {
    help=false
    root=false
    single_dataset_size=4

    //**Number of processes per tasks**//
    //dti_processes=4
    //mrds_processes=4

    //**Process control**//
    processes = false

    use_isotropic = true
    use_fslgrad = false
}

if(params.processes) {
    if(params.processes > Runtime.runtime.availableProcessors()) {
        throw new RuntimeException("Number of processes higher than available CPUs.")
    }
    else if(params.processes < 1) {
        throw new RuntimeException("When set, number of processes must be >= 1 " +
                                   "and smaller or equal to the number of CPUs.")
    }
    else {
        executor.$local.cpus = params.processes
    }
}

singularity.autoMounts = true

profiles {
    /*fully_reproducible {
        params.dti_processes=1
        params.mrds_processes=1
    }*/

    macos {
            process.scratch="/tmp"
    }

    cbrain {
      process{
        publishDir = [path: {"./results_mrds/$sid/$task.process"}, mode: 'copy']
      }
    }
}